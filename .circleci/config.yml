version: 2.1
orbs:
  coveralls: coveralls/coveralls@1.0.6
jobs:
  build:
    docker:
      - image: circleci/node:lts-browsers
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}

      - run: npm install

      # force update the webdriver, so it runs with latest version of Chrome
      - run: cd ./node_modules/protractor && npm i webdriver-manager@latest

      # because we use "npm ci" to install NPM dependencies
      # we cache "~/.npm" folder
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

      - run: npm run style
      - run: npm run lint

      - run: npm run build:prod
      - run: npm run test -- --watch=false --code-coverage
      - run: npm run e2e

      - store_test_results:
          path: ./test_results

      - store_artifacts:
          path: ./coverage

      -coveralls/upload




      # - run: npm run now:publish
      # - run: npm run test:a11y:ci

      - run:
          name: Tar & Gzip compiled app
          command: tar zcf dist.tar.gz dist/local-weather-app
      - store_artifacts:
          path: dist.tar.gz
  build_docker:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Execute Pipeline (Build Source -> Test -> Build WebServer)
          command: |
            docker build -f integration.Dockerfile . -t lemonmart:$CIRCLE_BRANCH
            mkdir -p docker-cache
            docker save lemon-mart:$CIRCLE_BRANCH | gzip > docker-cache/built-image.tar.gz
      - save_cache:
          key: built-image-{{ .BuildNum }}
          paths:
            - docker-cache
      - store_artifacts:
          path: docker-cache/built-image.tar.gz
          destination: built-image.tar.gz

workflows:
  version: 2
  build-and-test:
    jobs:
      - build_docker
